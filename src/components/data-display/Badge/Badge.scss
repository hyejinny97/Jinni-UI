@use 'sass:map';

$standard-badge-size: (
  sm: 16px,
  md: 20px,
  lg: 24px
);

$dot-badge-size: (
  sm: 4px,
  md: 8px,
  lg: 12px
);

$font-size: (
  sm: 10px,
  md: 12px,
  lg: 16px
);

$badge-padding: (
  sm: 0 4.5px,
  md: 0 6px,
  lg: 0 7px
);

$badge-translateX: (
  left: -50%,
  right: 50%
);

$badge-translateY: (
  top: -50%,
  bottom: 50%
);

@mixin badge-size-by-variant {
  @each $size in 'sm', 'md', 'lg' {
    &.standard.#{$size} {
      padding: map.get($badge-padding, $size);
      min-width: map.get($standard-badge-size, $size);
      height: map.get($standard-badge-size, $size);
      font-size: map.get($font-size, $size);
    }
  }
  @each $size in 'sm', 'md', 'lg' {
    &.dot.#{$size} {
      padding: 0;
      width: map.get($dot-badge-size, $size);
      height: map.get($dot-badge-size, $size);
    }
  }
}

@mixin badge-origin {
  @each $vertical in 'top', 'bottom' {
    @each $horizontal in 'left', 'right' {
      &.#{$vertical}.#{$horizontal} .JinniBadgeRoot {
        #{$vertical}: 0;
        #{$horizontal}: 0;
        transform: translate(
          map.get($badge-translateX, $horizontal),
          map.get($badge-translateY, $vertical)
        );
      }
    }
  }
}

.JinniBadge {
  display: inline-flex;
  width: max-content;
  height: max-content;
  position: relative;
  @include badge-origin;

  .JinniBadgeRoot {
    position: absolute;
    box-sizing: border-box;
    background-color: var(--jinni-color-primary);
    color: var(--jinni-color-on-primary);
    font-weight: var(--jinni-font-weight-medium);
    border-radius: 1000px;
    @include badge-size-by-variant;
  }
}
