@use 'sass:map';
@use '@/styles/variables' as var;

$button-padding-y: (
  sm: 4px,
  md: 6px,
  lg: 8px
);

$button-padding-x: (
  sm: 10px,
  md: 16px,
  lg: 22px
);

$button-square-size: (
  sm: 26px,
  md: 32px,
  lg: 38px
);

$button-gap: (
  sm: calc(map.get($button-padding-x, sm) * 1 / 2),
  md: calc(map.get($button-padding-x, md) * 1 / 2),
  lg: calc(map.get($button-padding-x, lg) * 1 / 2)
);

$label-font-size: (
  sm: 13px,
  md: 15px,
  lg: 17px
);

$icon-size: (
  sm: 18px,
  md: 20px,
  lg: 22px
);

$icon-margin: (
  sm: calc(map.get($button-padding-x, sm) * 1 / 4),
  md: calc(map.get($button-padding-x, md) * 1 / 4),
  lg: calc(map.get($button-padding-x, lg) * 1 / 4)
);

@mixin buttonSize {
  @each $size in 'sm', 'md', 'lg' {
    &.#{$size} {
      padding: map.get($button-padding-y, $size)
        map.get($button-padding-x, $size);
      column-gap: map.get($button-gap, $size);
      row-gap: map.get($button-gap, $size);
    }
  }
}

@mixin buttonShape {
  &.rounded {
    border-radius: 4px;
  }
  &.pill {
    border-radius: 9999px;
  }
}

@mixin buttonLabel {
  @each $size in 'sm', 'md', 'lg' {
    &.#{$size} .JinniButtonLabel {
      font-size: map.get($label-font-size, $size);
    }
  }
}

@mixin buttonLeft($size) {
  &.left {
    margin-left: - map.get($icon-margin, $size);
  }
}

@mixin buttonRight($size) {
  &.right {
    margin-right: - map.get($icon-margin, $size);
  }
}

@mixin buttonIcon {
  @each $size in 'sm', 'md', 'lg' {
    &.#{$size} .JinniButtonIcon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: map.get($icon-size, $size);
      height: map.get($icon-size, $size);
      color: var(--text-color);

      svg {
        width: inherit;
        height: inherit;
        path {
          fill: currentColor;
        }
      }

      @include buttonLeft($size);
      @include buttonRight($size);
    }
  }
}

@mixin buttonLoadingState {
  @each $size in 'sm', 'md', 'lg' {
    &.#{$size} .JinniButtonLoadingState {
      display: inline-flex;
      align-items: center;
      justify-content: center;

      @include buttonLeft($size);
      @include buttonRight($size);
    }
  }
}

@mixin fullWidth {
  &.fullWidth {
    justify-content: center;
    width: 100%;
  }
}

@mixin squareSize {
  @each $size in 'sm', 'md', 'lg' {
    &.square-size.#{$size} {
      justify-content: center;
      padding: map.get($button-padding-y, $size);
      width: map.get($button-square-size, $size);
      height: map.get($button-square-size, $size);
    }
  }
}

.JinniButtonBase.JinniButton {
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  height: max-content;
  box-sizing: border-box;
  border: 1px solid;
  text-decoration: none;
  color: var(--text-color);
  background-color: var(--background-color);
  border-color: var(--border-color);

  @include buttonSize;
  @include buttonShape;

  @include buttonLabel;
  @include buttonIcon;
  @include buttonLoadingState;

  @include fullWidth;
  @include squareSize;

  &.hasCenterIcon {
    flex-direction: column;
  }
}
