@use 'sass:map';

$button-padding-y: (
  sm: 4px,
  md: 6px,
  lg: 8px
);

$button-padding-x: (
  sm: 10px,
  md: 16px,
  lg: 22px
);

$label-font-size: (
  sm: 13px,
  md: 15px,
  lg: 17px
);

$adornment-size: (
  sm: 18px,
  md: 20px,
  lg: 22px
);

@mixin button-size {
  @each $size in 'sm', 'md', 'lg' {
    &.#{$size} {
      padding: map.get($button-padding-y, $size)
        map.get($button-padding-x, $size);
      gap: calc(map.get($button-padding-x, $size) * 1 / 2);
    }
  }
}

@mixin button-shape {
  &.rounded {
    border-radius: 4px;
  }
  &.pill {
    border-radius: 9999px;
  }
}

@mixin full-width {
  &.fullWidth {
    width: 100%;
  }
}

.JinniButtonBase.JinniButton {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: max-content;
  box-sizing: border-box;
  border: 1px solid;
  text-decoration: none;
  color: var(--text-color);
  background-color: var(--background-color);
  border-color: var(--border-color);
  @include button-size;
  @include button-shape;
  @include full-width;

  .JinniButtonLabel {
    display: inline-flex;
    @each $size in 'sm', 'md', 'lg' {
      &.#{$size} {
        font-size: map.get($label-font-size, $size);
      }
    }
  }

  .JinniButtonAdornment {
    @each $size in 'sm', 'md', 'lg' {
      &.#{$size} {
        width: map.get($adornment-size, $size);
        height: map.get($adornment-size, $size);
      }
      &.start.#{$size} {
        margin-left: - calc(map.get($button-padding-x, $size) * 1 / 4);
      }
      &.end.#{$size} {
        margin-right: - calc(map.get($button-padding-x, $size) * 1 / 4);
      }
    }

    & > svg,
    .JinniAvatar,
    .JinniCircularProgress {
      width: 100%;
      height: 100%;
    }
  }
}
